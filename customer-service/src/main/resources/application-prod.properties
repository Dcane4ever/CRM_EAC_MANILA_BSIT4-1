# Production Configuration for Render
server.port=${PORT:8080}

# Database Configuration - Render PostgreSQL
# Database connection is handled by DatabaseConfig.java for production
# This automatically converts Render's postgresql:// URL to jdbc:postgresql:// format

# JPA Configuration for Production
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Override MySQL dialect from main application.properties
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect=

# Email Configuration - Production (Disabled due to Render SMTP restrictions)
# Use SendGrid or similar service for production email sending
# spring.mail.host=smtp.gmail.com
# spring.mail.port=587
# spring.mail.username=${GMAIL_USERNAME:carwashpimentel@gmail.com}
# spring.mail.password=${GMAIL_APP_PASSWORD:iqay iitv owmv qmaw}
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true
# spring.mail.properties.mail.smtp.starttls.required=true
# spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Security
spring.security.user.name=admin
spring.security.user.password=${ADMIN_PASSWORD:admin123}

# Disable SQL initialization in production
spring.sql.init.mode=never

# Logging
logging.level.microservice.customer_service=DEBUG
logging.level.org.springframework.messaging=WARN
logging.level.org.hibernate=WARN
logging.level.org.springframework.security=DEBUG
